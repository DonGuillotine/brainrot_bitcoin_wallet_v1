// Mocks generated by Mockito 5.4.5 from annotations
// in brainrot_bitcoin_wallet_v1/test/ldk_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:io' as _i17;
import 'dart:typed_data' as _i13;

import 'package:brainrot_bitcoin_wallet_v1/services/base/service_result.dart'
    as _i10;
import 'package:brainrot_bitcoin_wallet_v1/services/network/network_service.dart'
    as _i15;
import 'package:brainrot_bitcoin_wallet_v1/services/security/encryption_service.dart'
    as _i12;
import 'package:brainrot_bitcoin_wallet_v1/services/storage/storage_service.dart'
    as _i7;
import 'package:cryptography_plus/cryptography_plus.dart' as _i14;
import 'package:dio/dio.dart' as _i16;
import 'package:hive_flutter/hive_flutter.dart' as _i11;
import 'package:ldk_node/src/generated/api/bolt11.dart' as _i6;
import 'package:ldk_node/src/generated/api/node.dart' as _i2;
import 'package:ldk_node/src/generated/api/types.dart' as _i3;
import 'package:ldk_node/src/generated/lib.dart' as _i5;
import 'package:ldk_node/src/root.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNode_0 extends _i1.SmartFake implements _i2.Node {
  _FakeNode_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNodeStatus_1 extends _i1.SmartFake implements _i3.NodeStatus {
  _FakeNodeStatus_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePublicKey_2 extends _i1.SmartFake implements _i3.PublicKey {
  _FakePublicKey_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBalanceDetails_3 extends _i1.SmartFake
    implements _i3.BalanceDetails {
  _FakeBalanceDetails_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfig_4 extends _i1.SmartFake implements _i3.Config {
  _FakeConfig_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserChannelId_5 extends _i1.SmartFake implements _i3.UserChannelId {
  _FakeUserChannelId_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkGraph_6 extends _i1.SmartFake implements _i4.NetworkGraph {
  _FakeNetworkGraph_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBolt11Payment_7 extends _i1.SmartFake implements _i4.Bolt11Payment {
  _FakeBolt11Payment_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBolt12Payment_8 extends _i1.SmartFake implements _i4.Bolt12Payment {
  _FakeBolt12Payment_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOnChainPayment_9 extends _i1.SmartFake
    implements _i4.OnChainPayment {
  _FakeOnChainPayment_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpontaneousPayment_10 extends _i1.SmartFake
    implements _i4.SpontaneousPayment {
  _FakeSpontaneousPayment_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBuilder_11 extends _i1.SmartFake implements _i4.Builder {
  _FakeBuilder_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNode_12 extends _i1.SmartFake implements _i4.Node {
  _FakeNode_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeU8Array32_13 extends _i1.SmartFake implements _i5.U8Array32 {
  _FakeU8Array32_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBolt11Payment_14 extends _i1.SmartFake implements _i5.Bolt11Payment {
  _FakeBolt11Payment_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBolt11Invoice_15 extends _i1.SmartFake implements _i6.Bolt11Invoice {
  _FakeBolt11Invoice_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentId_16 extends _i1.SmartFake implements _i3.PaymentId {
  _FakePaymentId_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelId_17 extends _i1.SmartFake implements _i3.ChannelId {
  _FakeChannelId_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelConfig_18 extends _i1.SmartFake implements _i3.ChannelConfig {
  _FakeChannelConfig_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i7.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get serviceName => (super.noSuchMethod(
        Invocation.getter(#serviceName),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#serviceName),
        ),
      ) as String);

  @override
  _i9.Future<_i10.ServiceResult<void>> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<void>>.value(
            _i8.dummyValue<_i10.ServiceResult<void>>(
          this,
          Invocation.method(
            #initialize,
            [],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<void>>);

  @override
  _i9.Future<_i10.ServiceResult<_i11.Box<dynamic>>> openBox(String? boxName) =>
      (super.noSuchMethod(
        Invocation.method(
          #openBox,
          [boxName],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<_i11.Box<dynamic>>>.value(
            _i8.dummyValue<_i10.ServiceResult<_i11.Box<dynamic>>>(
          this,
          Invocation.method(
            #openBox,
            [boxName],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<_i11.Box<dynamic>>>);

  @override
  _i9.Future<_i10.ServiceResult<void>> setValue<T>({
    required String? key,
    required T? value,
    String? boxName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setValue,
          [],
          {
            #key: key,
            #value: value,
            #boxName: boxName,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<void>>.value(
            _i8.dummyValue<_i10.ServiceResult<void>>(
          this,
          Invocation.method(
            #setValue,
            [],
            {
              #key: key,
              #value: value,
              #boxName: boxName,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<void>>);

  @override
  _i9.Future<_i10.ServiceResult<T?>> getValue<T>({
    required String? key,
    String? boxName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [],
          {
            #key: key,
            #boxName: boxName,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T?>>.value(
            _i8.dummyValue<_i10.ServiceResult<T?>>(
          this,
          Invocation.method(
            #getValue,
            [],
            {
              #key: key,
              #boxName: boxName,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T?>>);

  @override
  _i9.Future<_i10.ServiceResult<void>> deleteValue({
    required String? key,
    String? boxName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteValue,
          [],
          {
            #key: key,
            #boxName: boxName,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<void>>.value(
            _i8.dummyValue<_i10.ServiceResult<void>>(
          this,
          Invocation.method(
            #deleteValue,
            [],
            {
              #key: key,
              #boxName: boxName,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<void>>);

  @override
  _i9.Future<_i10.ServiceResult<void>> setSecureValue({
    required String? key,
    required String? value,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSecureValue,
          [],
          {
            #key: key,
            #value: value,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<void>>.value(
            _i8.dummyValue<_i10.ServiceResult<void>>(
          this,
          Invocation.method(
            #setSecureValue,
            [],
            {
              #key: key,
              #value: value,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<void>>);

  @override
  _i9.Future<_i10.ServiceResult<String?>> getSecureValue({
    required String? key,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSecureValue,
          [],
          {
            #key: key,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<String?>>.value(
            _i8.dummyValue<_i10.ServiceResult<String?>>(
          this,
          Invocation.method(
            #getSecureValue,
            [],
            {
              #key: key,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<String?>>);

  @override
  _i9.Future<_i10.ServiceResult<void>> nukeAllData() => (super.noSuchMethod(
        Invocation.method(
          #nukeAllData,
          [],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<void>>.value(
            _i8.dummyValue<_i10.ServiceResult<void>>(
          this,
          Invocation.method(
            #nukeAllData,
            [],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<void>>);

  @override
  _i9.Future<_i10.ServiceResult<String>> exportWalletData({
    required Map<String, dynamic>? walletData,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportWalletData,
          [],
          {
            #walletData: walletData,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<String>>.value(
            _i8.dummyValue<_i10.ServiceResult<String>>(
          this,
          Invocation.method(
            #exportWalletData,
            [],
            {
              #walletData: walletData,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<String>>);

  @override
  _i9.Future<_i10.ServiceResult<Map<String, dynamic>>> importWalletData({
    required String? encryptedData,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #importWalletData,
          [],
          {
            #encryptedData: encryptedData,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<Map<String, dynamic>>>.value(
            _i8.dummyValue<_i10.ServiceResult<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #importWalletData,
            [],
            {
              #encryptedData: encryptedData,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<Map<String, dynamic>>>);

  @override
  _i9.Future<_i10.ServiceResult<T>> executeOperation<T>({
    required _i9.Future<T> Function()? operation,
    required String? operationName,
    String? errorCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeOperation,
          [],
          {
            #operation: operation,
            #operationName: operationName,
            #errorCode: errorCode,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #executeOperation,
            [],
            {
              #operation: operation,
              #operationName: operationName,
              #errorCode: errorCode,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  _i9.Future<_i10.ServiceResult<T>> executeWithRetry<T>({
    required _i9.Future<T> Function()? operation,
    required String? operationName,
    int? maxRetries = 3,
    Duration? retryDelay = const Duration(seconds: 1),
    String? errorCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeWithRetry,
          [],
          {
            #operation: operation,
            #operationName: operationName,
            #maxRetries: maxRetries,
            #retryDelay: retryDelay,
            #errorCode: errorCode,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #executeWithRetry,
            [],
            {
              #operation: operation,
              #operationName: operationName,
              #maxRetries: maxRetries,
              #retryDelay: retryDelay,
              #errorCode: errorCode,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  void logDebug(String? message) => super.noSuchMethod(
        Invocation.method(
          #logDebug,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logInfo(String? message) => super.noSuchMethod(
        Invocation.method(
          #logInfo,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logWarning(String? message) => super.noSuchMethod(
        Invocation.method(
          #logWarning,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logError(
    String? message, {
    dynamic error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #logError,
          [message],
          {
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EncryptionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEncryptionService extends _i1.Mock implements _i12.EncryptionService {
  MockEncryptionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get serviceName => (super.noSuchMethod(
        Invocation.getter(#serviceName),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#serviceName),
        ),
      ) as String);

  @override
  _i13.Uint8List generateRandomBytes(int? length) => (super.noSuchMethod(
        Invocation.method(
          #generateRandomBytes,
          [length],
        ),
        returnValue: _i13.Uint8List(0),
      ) as _i13.Uint8List);

  @override
  _i13.Uint8List generateSalt() => (super.noSuchMethod(
        Invocation.method(
          #generateSalt,
          [],
        ),
        returnValue: _i13.Uint8List(0),
      ) as _i13.Uint8List);

  @override
  _i9.Future<_i10.ServiceResult<_i14.SecretKey>> deriveKey(
    String? password,
    _i13.Uint8List? salt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deriveKey,
          [
            password,
            salt,
          ],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<_i14.SecretKey>>.value(
            _i8.dummyValue<_i10.ServiceResult<_i14.SecretKey>>(
          this,
          Invocation.method(
            #deriveKey,
            [
              password,
              salt,
            ],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<_i14.SecretKey>>);

  @override
  _i9.Future<_i10.ServiceResult<String>> hashData(String? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #hashData,
          [data],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<String>>.value(
            _i8.dummyValue<_i10.ServiceResult<String>>(
          this,
          Invocation.method(
            #hashData,
            [data],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<String>>);

  @override
  _i9.Future<_i10.ServiceResult<String>> hashDataSha512(String? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #hashDataSha512,
          [data],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<String>>.value(
            _i8.dummyValue<_i10.ServiceResult<String>>(
          this,
          Invocation.method(
            #hashDataSha512,
            [data],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<String>>);

  @override
  _i9.Future<_i10.ServiceResult<String>> hmacSha256(
    String? data,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #hmacSha256,
          [
            data,
            key,
          ],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<String>>.value(
            _i8.dummyValue<_i10.ServiceResult<String>>(
          this,
          Invocation.method(
            #hmacSha256,
            [
              data,
              key,
            ],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<String>>);

  @override
  _i9.Future<_i10.ServiceResult<String>> encryptWithPassword({
    required String? plainText,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #encryptWithPassword,
          [],
          {
            #plainText: plainText,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<String>>.value(
            _i8.dummyValue<_i10.ServiceResult<String>>(
          this,
          Invocation.method(
            #encryptWithPassword,
            [],
            {
              #plainText: plainText,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<String>>);

  @override
  _i9.Future<_i10.ServiceResult<String>> decryptWithPassword({
    required String? encryptedData,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #decryptWithPassword,
          [],
          {
            #encryptedData: encryptedData,
            #password: password,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<String>>.value(
            _i8.dummyValue<_i10.ServiceResult<String>>(
          this,
          Invocation.method(
            #decryptWithPassword,
            [],
            {
              #encryptedData: encryptedData,
              #password: password,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<String>>);

  @override
  _i9.Future<_i10.ServiceResult<_i13.Uint8List>> generateMnemonicEntropy(
          {int? strength = 128}) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateMnemonicEntropy,
          [],
          {#strength: strength},
        ),
        returnValue: _i9.Future<_i10.ServiceResult<_i13.Uint8List>>.value(
            _i8.dummyValue<_i10.ServiceResult<_i13.Uint8List>>(
          this,
          Invocation.method(
            #generateMnemonicEntropy,
            [],
            {#strength: strength},
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<_i13.Uint8List>>);

  @override
  String generateSecurePin({int? length = 6}) => (super.noSuchMethod(
        Invocation.method(
          #generateSecurePin,
          [],
          {#length: length},
        ),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.method(
            #generateSecurePin,
            [],
            {#length: length},
          ),
        ),
      ) as String);

  @override
  _i9.Future<_i10.ServiceResult<bool>> verifyPassword({
    required String? password,
    required String? hashedPassword,
    required _i13.Uint8List? salt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPassword,
          [],
          {
            #password: password,
            #hashedPassword: hashedPassword,
            #salt: salt,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<bool>>.value(
            _i8.dummyValue<_i10.ServiceResult<bool>>(
          this,
          Invocation.method(
            #verifyPassword,
            [],
            {
              #password: password,
              #hashedPassword: hashedPassword,
              #salt: salt,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<bool>>);

  @override
  void secureCleanup(_i13.Uint8List? data) => super.noSuchMethod(
        Invocation.method(
          #secureCleanup,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i10.ServiceResult<T>> executeOperation<T>({
    required _i9.Future<T> Function()? operation,
    required String? operationName,
    String? errorCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeOperation,
          [],
          {
            #operation: operation,
            #operationName: operationName,
            #errorCode: errorCode,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #executeOperation,
            [],
            {
              #operation: operation,
              #operationName: operationName,
              #errorCode: errorCode,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  _i9.Future<_i10.ServiceResult<T>> executeWithRetry<T>({
    required _i9.Future<T> Function()? operation,
    required String? operationName,
    int? maxRetries = 3,
    Duration? retryDelay = const Duration(seconds: 1),
    String? errorCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeWithRetry,
          [],
          {
            #operation: operation,
            #operationName: operationName,
            #maxRetries: maxRetries,
            #retryDelay: retryDelay,
            #errorCode: errorCode,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #executeWithRetry,
            [],
            {
              #operation: operation,
              #operationName: operationName,
              #maxRetries: maxRetries,
              #retryDelay: retryDelay,
              #errorCode: errorCode,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  void logDebug(String? message) => super.noSuchMethod(
        Invocation.method(
          #logDebug,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logInfo(String? message) => super.noSuchMethod(
        Invocation.method(
          #logInfo,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logWarning(String? message) => super.noSuchMethod(
        Invocation.method(
          #logWarning,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logError(
    String? message, {
    dynamic error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #logError,
          [message],
          {
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i15.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get serviceName => (super.noSuchMethod(
        Invocation.getter(#serviceName),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#serviceName),
        ),
      ) as String);

  @override
  _i9.Future<_i10.ServiceResult<bool>> isOnline() => (super.noSuchMethod(
        Invocation.method(
          #isOnline,
          [],
        ),
        returnValue: _i9.Future<_i10.ServiceResult<bool>>.value(
            _i8.dummyValue<_i10.ServiceResult<bool>>(
          this,
          Invocation.method(
            #isOnline,
            [],
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<bool>>);

  @override
  _i9.Future<_i10.ServiceResult<T>> get<T>({
    required String? url,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #url: url,
            #queryParameters: queryParameters,
            #options: options,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #get,
            [],
            {
              #url: url,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  _i9.Future<_i10.ServiceResult<T>> post<T>({
    required String? url,
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i16.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #url: url,
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #post,
            [],
            {
              #url: url,
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  void cancelAllRequests() => super.noSuchMethod(
        Invocation.method(
          #cancelAllRequests,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i10.ServiceResult<void>> downloadFile({
    required String? url,
    required String? savePath,
    void Function(
      int,
      int,
    )? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [],
          {
            #url: url,
            #savePath: savePath,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<void>>.value(
            _i8.dummyValue<_i10.ServiceResult<void>>(
          this,
          Invocation.method(
            #downloadFile,
            [],
            {
              #url: url,
              #savePath: savePath,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<void>>);

  @override
  _i9.Future<_i10.ServiceResult<_i17.WebSocket>> createWebSocket({
    required String? url,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWebSocket,
          [],
          {
            #url: url,
            #headers: headers,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<_i17.WebSocket>>.value(
            _i8.dummyValue<_i10.ServiceResult<_i17.WebSocket>>(
          this,
          Invocation.method(
            #createWebSocket,
            [],
            {
              #url: url,
              #headers: headers,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<_i17.WebSocket>>);

  @override
  _i9.Future<_i10.ServiceResult<T>> executeOperation<T>({
    required _i9.Future<T> Function()? operation,
    required String? operationName,
    String? errorCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeOperation,
          [],
          {
            #operation: operation,
            #operationName: operationName,
            #errorCode: errorCode,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #executeOperation,
            [],
            {
              #operation: operation,
              #operationName: operationName,
              #errorCode: errorCode,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  _i9.Future<_i10.ServiceResult<T>> executeWithRetry<T>({
    required _i9.Future<T> Function()? operation,
    required String? operationName,
    int? maxRetries = 3,
    Duration? retryDelay = const Duration(seconds: 1),
    String? errorCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeWithRetry,
          [],
          {
            #operation: operation,
            #operationName: operationName,
            #maxRetries: maxRetries,
            #retryDelay: retryDelay,
            #errorCode: errorCode,
          },
        ),
        returnValue: _i9.Future<_i10.ServiceResult<T>>.value(
            _i8.dummyValue<_i10.ServiceResult<T>>(
          this,
          Invocation.method(
            #executeWithRetry,
            [],
            {
              #operation: operation,
              #operationName: operationName,
              #maxRetries: maxRetries,
              #retryDelay: retryDelay,
              #errorCode: errorCode,
            },
          ),
        )),
      ) as _i9.Future<_i10.ServiceResult<T>>);

  @override
  void logDebug(String? message) => super.noSuchMethod(
        Invocation.method(
          #logDebug,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logInfo(String? message) => super.noSuchMethod(
        Invocation.method(
          #logInfo,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logWarning(String? message) => super.noSuchMethod(
        Invocation.method(
          #logWarning,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logError(
    String? message, {
    dynamic error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #logError,
          [message],
          {
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Node].
///
/// See the documentation for Mockito's code generation for more information.
class MockNode extends _i1.Mock implements _i4.Node {
  MockNode() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Node get ptr => (super.noSuchMethod(
        Invocation.getter(#ptr),
        returnValue: _FakeNode_0(
          this,
          Invocation.getter(#ptr),
        ),
      ) as _i2.Node);

  @override
  _i9.Future<void> start({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #start,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> stop({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.NodeStatus> status({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #status,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<_i3.NodeStatus>.value(_FakeNodeStatus_1(
          this,
          Invocation.method(
            #status,
            [],
            {#hint: hint},
          ),
        )),
      ) as _i9.Future<_i3.NodeStatus>);

  @override
  _i9.Future<void> eventHandled({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #eventHandled,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.Event?> nextEvent({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #nextEvent,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<_i3.Event?>.value(),
      ) as _i9.Future<_i3.Event?>);

  @override
  _i9.Future<_i3.Event?> waitNextHandled({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #waitNextHandled,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<_i3.Event?>.value(),
      ) as _i9.Future<_i3.Event?>);

  @override
  _i9.Future<_i3.Event> nextEventAsync({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #nextEventAsync,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<_i3.Event>.value(_i8.dummyValue<_i3.Event>(
          this,
          Invocation.method(
            #nextEventAsync,
            [],
            {#hint: hint},
          ),
        )),
      ) as _i9.Future<_i3.Event>);

  @override
  _i9.Future<_i3.PublicKey> nodeId({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #nodeId,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<_i3.PublicKey>.value(_FakePublicKey_2(
          this,
          Invocation.method(
            #nodeId,
            [],
            {#hint: hint},
          ),
        )),
      ) as _i9.Future<_i3.PublicKey>);

  @override
  _i9.Future<List<_i3.SocketAddress>?> listeningAddresses({dynamic hint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listeningAddresses,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<List<_i3.SocketAddress>?>.value(),
      ) as _i9.Future<List<_i3.SocketAddress>?>);

  @override
  _i9.Future<_i3.BalanceDetails> listBalances({dynamic hint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listBalances,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<_i3.BalanceDetails>.value(_FakeBalanceDetails_3(
          this,
          Invocation.method(
            #listBalances,
            [],
            {#hint: hint},
          ),
        )),
      ) as _i9.Future<_i3.BalanceDetails>);

  @override
  _i9.Future<_i3.Config> config({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<_i3.Config>.value(_FakeConfig_4(
          this,
          Invocation.method(
            #config,
            [],
            {#hint: hint},
          ),
        )),
      ) as _i9.Future<_i3.Config>);

  @override
  _i9.Future<List<_i3.ChannelDetails>> listChannels({dynamic hint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listChannels,
          [],
          {#hint: hint},
        ),
        returnValue:
            _i9.Future<List<_i3.ChannelDetails>>.value(<_i3.ChannelDetails>[]),
      ) as _i9.Future<List<_i3.ChannelDetails>>);

  @override
  _i9.Future<void> connect({
    required _i3.SocketAddress? address,
    required _i3.PublicKey? nodeId,
    required bool? persist,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {
            #address: address,
            #nodeId: nodeId,
            #persist: persist,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> disconnect({
    required _i3.PublicKey? counterpartyNodeId,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
          {
            #counterpartyNodeId: counterpartyNodeId,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.UserChannelId> connectOpenChannel({
    required _i3.SocketAddress? socketAddress,
    required _i3.PublicKey? nodeId,
    required BigInt? channelAmountSats,
    required bool? announceChannel,
    _i3.ChannelConfig? channelConfig,
    BigInt? pushToCounterpartyMsat,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectOpenChannel,
          [],
          {
            #socketAddress: socketAddress,
            #nodeId: nodeId,
            #channelAmountSats: channelAmountSats,
            #announceChannel: announceChannel,
            #channelConfig: channelConfig,
            #pushToCounterpartyMsat: pushToCounterpartyMsat,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i3.UserChannelId>.value(_FakeUserChannelId_5(
          this,
          Invocation.method(
            #connectOpenChannel,
            [],
            {
              #socketAddress: socketAddress,
              #nodeId: nodeId,
              #channelAmountSats: channelAmountSats,
              #announceChannel: announceChannel,
              #channelConfig: channelConfig,
              #pushToCounterpartyMsat: pushToCounterpartyMsat,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i3.UserChannelId>);

  @override
  _i9.Future<void> syncWallets({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #syncWallets,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i4.NetworkGraph> networkGraph() => (super.noSuchMethod(
        Invocation.method(
          #networkGraph,
          [],
        ),
        returnValue: _i9.Future<_i4.NetworkGraph>.value(_FakeNetworkGraph_6(
          this,
          Invocation.method(
            #networkGraph,
            [],
          ),
        )),
      ) as _i9.Future<_i4.NetworkGraph>);

  @override
  _i9.Future<void> closeChannel({
    required _i3.PublicKey? counterpartyNodeId,
    required _i3.UserChannelId? userChannelId,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #closeChannel,
          [],
          {
            #counterpartyNodeId: counterpartyNodeId,
            #userChannelId: userChannelId,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> forceCloseChannel({
    required _i3.PublicKey? counterpartyNodeId,
    required _i3.UserChannelId? userChannelId,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #forceCloseChannel,
          [],
          {
            #counterpartyNodeId: counterpartyNodeId,
            #userChannelId: userChannelId,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> updateChannelConfig({
    required _i3.PublicKey? counterpartyNodeId,
    required _i3.UserChannelId? userChannelId,
    required _i3.ChannelConfig? channelConfig,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateChannelConfig,
          [],
          {
            #counterpartyNodeId: counterpartyNodeId,
            #userChannelId: userChannelId,
            #channelConfig: channelConfig,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.PaymentDetails?> payment({
    required _i3.PaymentId? paymentId,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #payment,
          [],
          {
            #paymentId: paymentId,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i3.PaymentDetails?>.value(),
      ) as _i9.Future<_i3.PaymentDetails?>);

  @override
  _i9.Future<void> removePayment({
    required _i3.PaymentId? paymentId,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removePayment,
          [],
          {
            #paymentId: paymentId,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<_i3.PaymentDetails>> listPaymentsWithFilter({
    required _i3.PaymentDirection? paymentDirection,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listPaymentsWithFilter,
          [],
          {
            #paymentDirection: paymentDirection,
            #hint: hint,
          },
        ),
        returnValue:
            _i9.Future<List<_i3.PaymentDetails>>.value(<_i3.PaymentDetails>[]),
      ) as _i9.Future<List<_i3.PaymentDetails>>);

  @override
  _i9.Future<List<_i3.PaymentDetails>> listPayments({dynamic hint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listPayments,
          [],
          {#hint: hint},
        ),
        returnValue:
            _i9.Future<List<_i3.PaymentDetails>>.value(<_i3.PaymentDetails>[]),
      ) as _i9.Future<List<_i3.PaymentDetails>>);

  @override
  _i9.Future<List<_i3.PeerDetails>> listPeers({dynamic hint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listPeers,
          [],
          {#hint: hint},
        ),
        returnValue:
            _i9.Future<List<_i3.PeerDetails>>.value(<_i3.PeerDetails>[]),
      ) as _i9.Future<List<_i3.PeerDetails>>);

  @override
  _i9.Future<String> signMessage({
    required List<int>? msg,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signMessage,
          [],
          {
            #msg: msg,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #signMessage,
            [],
            {
              #msg: msg,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<bool> verifySignature({
    required List<int>? msg,
    required String? sig,
    required _i3.PublicKey? publicKey,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifySignature,
          [],
          {
            #msg: msg,
            #sig: sig,
            #publicKey: publicKey,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i4.Bolt11Payment> bolt11Payment() => (super.noSuchMethod(
        Invocation.method(
          #bolt11Payment,
          [],
        ),
        returnValue: _i9.Future<_i4.Bolt11Payment>.value(_FakeBolt11Payment_7(
          this,
          Invocation.method(
            #bolt11Payment,
            [],
          ),
        )),
      ) as _i9.Future<_i4.Bolt11Payment>);

  @override
  _i9.Future<_i4.Bolt12Payment> bolt12Payment() => (super.noSuchMethod(
        Invocation.method(
          #bolt12Payment,
          [],
        ),
        returnValue: _i9.Future<_i4.Bolt12Payment>.value(_FakeBolt12Payment_8(
          this,
          Invocation.method(
            #bolt12Payment,
            [],
          ),
        )),
      ) as _i9.Future<_i4.Bolt12Payment>);

  @override
  _i9.Future<_i4.OnChainPayment> onChainPayment() => (super.noSuchMethod(
        Invocation.method(
          #onChainPayment,
          [],
        ),
        returnValue: _i9.Future<_i4.OnChainPayment>.value(_FakeOnChainPayment_9(
          this,
          Invocation.method(
            #onChainPayment,
            [],
          ),
        )),
      ) as _i9.Future<_i4.OnChainPayment>);

  @override
  _i9.Future<_i4.SpontaneousPayment> spontaneousPayment() =>
      (super.noSuchMethod(
        Invocation.method(
          #spontaneousPayment,
          [],
        ),
        returnValue:
            _i9.Future<_i4.SpontaneousPayment>.value(_FakeSpontaneousPayment_10(
          this,
          Invocation.method(
            #spontaneousPayment,
            [],
          ),
        )),
      ) as _i9.Future<_i4.SpontaneousPayment>);

  @override
  _i9.Future<_i3.Event> waitNextEvent() => (super.noSuchMethod(
        Invocation.method(
          #waitNextEvent,
          [],
        ),
        returnValue: _i9.Future<_i3.Event>.value(_i8.dummyValue<_i3.Event>(
          this,
          Invocation.method(
            #waitNextEvent,
            [],
          ),
        )),
      ) as _i9.Future<_i3.Event>);
}

/// A class which mocks [Builder].
///
/// See the documentation for Mockito's code generation for more information.
class MockBuilder extends _i1.Mock implements _i4.Builder {
  MockBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Builder setEntropySeedPath(String? seedPath) => (super.noSuchMethod(
        Invocation.method(
          #setEntropySeedPath,
          [seedPath],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setEntropySeedPath,
            [seedPath],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setEntropySeedBytes(_i5.U8Array64? seedBytes) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEntropySeedBytes,
          [seedBytes],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setEntropySeedBytes,
            [seedBytes],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setEntropyBip39Mnemonic({
    required _i4.Mnemonic? mnemonic,
    String? passphrase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEntropyBip39Mnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #passphrase: passphrase,
          },
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setEntropyBip39Mnemonic,
            [],
            {
              #mnemonic: mnemonic,
              #passphrase: passphrase,
            },
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setEsploraServer(String? esploraServerUrl) => (super.noSuchMethod(
        Invocation.method(
          #setEsploraServer,
          [esploraServerUrl],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setEsploraServer,
            [esploraServerUrl],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setGossipSourceP2p() => (super.noSuchMethod(
        Invocation.method(
          #setGossipSourceP2p,
          [],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setGossipSourceP2p,
            [],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setGossipSourceRgs(String? rgsServerUrl) => (super.noSuchMethod(
        Invocation.method(
          #setGossipSourceRgs,
          [rgsServerUrl],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setGossipSourceRgs,
            [rgsServerUrl],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setStorageDirPath(String? storageDirPath) => (super.noSuchMethod(
        Invocation.method(
          #setStorageDirPath,
          [storageDirPath],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setStorageDirPath,
            [storageDirPath],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setNetwork(_i3.Network? network) => (super.noSuchMethod(
        Invocation.method(
          #setNetwork,
          [network],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setNetwork,
            [network],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setListeningAddresses(
          List<_i3.SocketAddress>? listeningAddresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #setListeningAddresses,
          [listeningAddresses],
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setListeningAddresses,
            [listeningAddresses],
          ),
        ),
      ) as _i4.Builder);

  @override
  _i4.Builder setLiquiditySourceLsps2({
    required _i3.SocketAddress? address,
    required _i3.PublicKey? publicKey,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLiquiditySourceLsps2,
          [],
          {
            #address: address,
            #publicKey: publicKey,
            #token: token,
          },
        ),
        returnValue: _FakeBuilder_11(
          this,
          Invocation.method(
            #setLiquiditySourceLsps2,
            [],
            {
              #address: address,
              #publicKey: publicKey,
              #token: token,
            },
          ),
        ),
      ) as _i4.Builder);

  @override
  _i9.Future<_i4.Node> build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _i9.Future<_i4.Node>.value(_FakeNode_12(
          this,
          Invocation.method(
            #build,
            [],
          ),
        )),
      ) as _i9.Future<_i4.Node>);

  @override
  _i9.Future<_i4.Node> buildWithFsStore() => (super.noSuchMethod(
        Invocation.method(
          #buildWithFsStore,
          [],
        ),
        returnValue: _i9.Future<_i4.Node>.value(_FakeNode_12(
          this,
          Invocation.method(
            #buildWithFsStore,
            [],
          ),
        )),
      ) as _i9.Future<_i4.Node>);
}

/// A class which mocks [Mnemonic].
///
/// See the documentation for Mockito's code generation for more information.
class MockMnemonic extends _i1.Mock implements _i4.Mnemonic {
  MockMnemonic() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get seedPhrase => (super.noSuchMethod(
        Invocation.getter(#seedPhrase),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#seedPhrase),
        ),
      ) as String);
}

/// A class which mocks [PublicKey].
///
/// See the documentation for Mockito's code generation for more information.
class MockPublicKey extends _i1.Mock implements _i3.PublicKey {
  MockPublicKey() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get hex => (super.noSuchMethod(
        Invocation.getter(#hex),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#hex),
        ),
      ) as String);
}

/// A class which mocks [UserChannelId].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserChannelId extends _i1.Mock implements _i3.UserChannelId {
  MockUserChannelId() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Uint8List get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: _i13.Uint8List(0),
      ) as _i13.Uint8List);
}

/// A class which mocks [PaymentId].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentId extends _i1.Mock implements _i3.PaymentId {
  MockPaymentId() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.U8Array32 get field0 => (super.noSuchMethod(
        Invocation.getter(#field0),
        returnValue: _FakeU8Array32_13(
          this,
          Invocation.getter(#field0),
        ),
      ) as _i5.U8Array32);
}

/// A class which mocks [Bolt11Invoice].
///
/// See the documentation for Mockito's code generation for more information.
class MockBolt11Invoice extends _i1.Mock implements _i6.Bolt11Invoice {
  MockBolt11Invoice() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get signedRawInvoice => (super.noSuchMethod(
        Invocation.getter(#signedRawInvoice),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#signedRawInvoice),
        ),
      ) as String);
}

/// A class which mocks [Bolt11Payment].
///
/// See the documentation for Mockito's code generation for more information.
class MockBolt11Payment extends _i1.Mock implements _i4.Bolt11Payment {
  MockBolt11Payment() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Bolt11Payment get ptr => (super.noSuchMethod(
        Invocation.getter(#ptr),
        returnValue: _FakeBolt11Payment_14(
          this,
          Invocation.getter(#ptr),
        ),
      ) as _i5.Bolt11Payment);

  @override
  _i9.Future<void> claimForHash({
    required _i3.PaymentHash? paymentHash,
    required BigInt? claimableAmountMsat,
    required _i3.PaymentPreimage? preimage,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #claimForHash,
          [],
          {
            #paymentHash: paymentHash,
            #claimableAmountMsat: claimableAmountMsat,
            #preimage: preimage,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> failForHash({required _i3.PaymentHash? paymentHash}) =>
      (super.noSuchMethod(
        Invocation.method(
          #failForHash,
          [],
          {#paymentHash: paymentHash},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i6.Bolt11Invoice> receiveForHash({
    required _i3.PaymentHash? paymentHash,
    required BigInt? amountMsat,
    required String? description,
    required int? expirySecs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #receiveForHash,
          [],
          {
            #paymentHash: paymentHash,
            #amountMsat: amountMsat,
            #description: description,
            #expirySecs: expirySecs,
          },
        ),
        returnValue: _i9.Future<_i6.Bolt11Invoice>.value(_FakeBolt11Invoice_15(
          this,
          Invocation.method(
            #receiveForHash,
            [],
            {
              #paymentHash: paymentHash,
              #amountMsat: amountMsat,
              #description: description,
              #expirySecs: expirySecs,
            },
          ),
        )),
      ) as _i9.Future<_i6.Bolt11Invoice>);

  @override
  _i9.Future<_i6.Bolt11Invoice> receiveVariableAmountForHash({
    required String? description,
    required int? expirySecs,
    required _i3.PaymentHash? paymentHash,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #receiveVariableAmountForHash,
          [],
          {
            #description: description,
            #expirySecs: expirySecs,
            #paymentHash: paymentHash,
          },
        ),
        returnValue: _i9.Future<_i6.Bolt11Invoice>.value(_FakeBolt11Invoice_15(
          this,
          Invocation.method(
            #receiveVariableAmountForHash,
            [],
            {
              #description: description,
              #expirySecs: expirySecs,
              #paymentHash: paymentHash,
            },
          ),
        )),
      ) as _i9.Future<_i6.Bolt11Invoice>);

  @override
  _i9.Future<_i6.Bolt11Invoice> receive({
    required BigInt? amountMsat,
    required String? description,
    required int? expirySecs,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #receive,
          [],
          {
            #amountMsat: amountMsat,
            #description: description,
            #expirySecs: expirySecs,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i6.Bolt11Invoice>.value(_FakeBolt11Invoice_15(
          this,
          Invocation.method(
            #receive,
            [],
            {
              #amountMsat: amountMsat,
              #description: description,
              #expirySecs: expirySecs,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i6.Bolt11Invoice>);

  @override
  _i9.Future<_i6.Bolt11Invoice> receiveVariableAmount({
    required String? description,
    required int? expirySecs,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #receiveVariableAmount,
          [],
          {
            #description: description,
            #expirySecs: expirySecs,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i6.Bolt11Invoice>.value(_FakeBolt11Invoice_15(
          this,
          Invocation.method(
            #receiveVariableAmount,
            [],
            {
              #description: description,
              #expirySecs: expirySecs,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i6.Bolt11Invoice>);

  @override
  _i9.Future<_i6.Bolt11Invoice> receiveVariableAmountViaJitChannel({
    required String? description,
    required int? expirySecs,
    BigInt? maxProportionalLspFeeLimitPpmMsat,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #receiveVariableAmountViaJitChannel,
          [],
          {
            #description: description,
            #expirySecs: expirySecs,
            #maxProportionalLspFeeLimitPpmMsat:
                maxProportionalLspFeeLimitPpmMsat,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i6.Bolt11Invoice>.value(_FakeBolt11Invoice_15(
          this,
          Invocation.method(
            #receiveVariableAmountViaJitChannel,
            [],
            {
              #description: description,
              #expirySecs: expirySecs,
              #maxProportionalLspFeeLimitPpmMsat:
                  maxProportionalLspFeeLimitPpmMsat,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i6.Bolt11Invoice>);

  @override
  _i9.Future<_i6.Bolt11Invoice> receiveViaJitChannel({
    required BigInt? amountMsat,
    required String? description,
    required int? expirySecs,
    BigInt? maxTotalLspFeeLimitMsat,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #receiveViaJitChannel,
          [],
          {
            #amountMsat: amountMsat,
            #description: description,
            #expirySecs: expirySecs,
            #maxTotalLspFeeLimitMsat: maxTotalLspFeeLimitMsat,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i6.Bolt11Invoice>.value(_FakeBolt11Invoice_15(
          this,
          Invocation.method(
            #receiveViaJitChannel,
            [],
            {
              #amountMsat: amountMsat,
              #description: description,
              #expirySecs: expirySecs,
              #maxTotalLspFeeLimitMsat: maxTotalLspFeeLimitMsat,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i6.Bolt11Invoice>);

  @override
  _i9.Future<_i3.PaymentId> send({
    required _i6.Bolt11Invoice? invoice,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [],
          {
            #invoice: invoice,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i3.PaymentId>.value(_FakePaymentId_16(
          this,
          Invocation.method(
            #send,
            [],
            {
              #invoice: invoice,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i3.PaymentId>);

  @override
  _i9.Future<void> sendProbes({
    required _i6.Bolt11Invoice? invoice,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendProbes,
          [],
          {
            #invoice: invoice,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> sendProbesUsingAmount({
    required _i6.Bolt11Invoice? invoice,
    required BigInt? amountMsat,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendProbesUsingAmount,
          [],
          {
            #invoice: invoice,
            #amountMsat: amountMsat,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i3.PaymentId> sendUsingAmount({
    required _i6.Bolt11Invoice? invoice,
    required BigInt? amountMsat,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendUsingAmount,
          [],
          {
            #invoice: invoice,
            #amountMsat: amountMsat,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i3.PaymentId>.value(_FakePaymentId_16(
          this,
          Invocation.method(
            #sendUsingAmount,
            [],
            {
              #invoice: invoice,
              #amountMsat: amountMsat,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i3.PaymentId>);
}

/// A class which mocks [ChannelDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockChannelDetails extends _i1.Mock implements _i3.ChannelDetails {
  MockChannelDetails() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ChannelId get channelId => (super.noSuchMethod(
        Invocation.getter(#channelId),
        returnValue: _FakeChannelId_17(
          this,
          Invocation.getter(#channelId),
        ),
      ) as _i3.ChannelId);

  @override
  _i3.PublicKey get counterpartyNodeId => (super.noSuchMethod(
        Invocation.getter(#counterpartyNodeId),
        returnValue: _FakePublicKey_2(
          this,
          Invocation.getter(#counterpartyNodeId),
        ),
      ) as _i3.PublicKey);

  @override
  BigInt get channelValueSats => (super.noSuchMethod(
        Invocation.getter(#channelValueSats),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#channelValueSats),
        ),
      ) as BigInt);

  @override
  _i3.UserChannelId get userChannelId => (super.noSuchMethod(
        Invocation.getter(#userChannelId),
        returnValue: _FakeUserChannelId_5(
          this,
          Invocation.getter(#userChannelId),
        ),
      ) as _i3.UserChannelId);

  @override
  int get feerateSatPer1000Weight => (super.noSuchMethod(
        Invocation.getter(#feerateSatPer1000Weight),
        returnValue: 0,
      ) as int);

  @override
  BigInt get outboundCapacityMsat => (super.noSuchMethod(
        Invocation.getter(#outboundCapacityMsat),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#outboundCapacityMsat),
        ),
      ) as BigInt);

  @override
  BigInt get inboundCapacityMsat => (super.noSuchMethod(
        Invocation.getter(#inboundCapacityMsat),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#inboundCapacityMsat),
        ),
      ) as BigInt);

  @override
  bool get isOutbound => (super.noSuchMethod(
        Invocation.getter(#isOutbound),
        returnValue: false,
      ) as bool);

  @override
  bool get isChannelReady => (super.noSuchMethod(
        Invocation.getter(#isChannelReady),
        returnValue: false,
      ) as bool);

  @override
  bool get isUsable => (super.noSuchMethod(
        Invocation.getter(#isUsable),
        returnValue: false,
      ) as bool);

  @override
  bool get isPublic => (super.noSuchMethod(
        Invocation.getter(#isPublic),
        returnValue: false,
      ) as bool);

  @override
  BigInt get counterpartyUnspendablePunishmentReserve => (super.noSuchMethod(
        Invocation.getter(#counterpartyUnspendablePunishmentReserve),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#counterpartyUnspendablePunishmentReserve),
        ),
      ) as BigInt);

  @override
  BigInt get nextOutboundHtlcLimitMsat => (super.noSuchMethod(
        Invocation.getter(#nextOutboundHtlcLimitMsat),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#nextOutboundHtlcLimitMsat),
        ),
      ) as BigInt);

  @override
  BigInt get nextOutboundHtlcMinimumMsat => (super.noSuchMethod(
        Invocation.getter(#nextOutboundHtlcMinimumMsat),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#nextOutboundHtlcMinimumMsat),
        ),
      ) as BigInt);

  @override
  BigInt get inboundHtlcMinimumMsat => (super.noSuchMethod(
        Invocation.getter(#inboundHtlcMinimumMsat),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#inboundHtlcMinimumMsat),
        ),
      ) as BigInt);

  @override
  _i3.ChannelConfig get config => (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue: _FakeChannelConfig_18(
          this,
          Invocation.getter(#config),
        ),
      ) as _i3.ChannelConfig);
}

/// A class which mocks [PaymentDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentDetails extends _i1.Mock implements _i3.PaymentDetails {
  MockPaymentDetails() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.PaymentId get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _FakePaymentId_16(
          this,
          Invocation.getter(#id),
        ),
      ) as _i3.PaymentId);

  @override
  _i3.PaymentKind get kind => (super.noSuchMethod(
        Invocation.getter(#kind),
        returnValue: _i8.dummyValue<_i3.PaymentKind>(
          this,
          Invocation.getter(#kind),
        ),
      ) as _i3.PaymentKind);

  @override
  _i3.PaymentDirection get direction => (super.noSuchMethod(
        Invocation.getter(#direction),
        returnValue: _i3.PaymentDirection.inbound,
      ) as _i3.PaymentDirection);

  @override
  _i3.PaymentStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i3.PaymentStatus.pending,
      ) as _i3.PaymentStatus);

  @override
  BigInt get latestUpdateTimestamp => (super.noSuchMethod(
        Invocation.getter(#latestUpdateTimestamp),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#latestUpdateTimestamp),
        ),
      ) as BigInt);
}

/// A class which mocks [BalanceDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockBalanceDetails extends _i1.Mock implements _i3.BalanceDetails {
  MockBalanceDetails() {
    _i1.throwOnMissingStub(this);
  }

  @override
  BigInt get totalOnchainBalanceSats => (super.noSuchMethod(
        Invocation.getter(#totalOnchainBalanceSats),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#totalOnchainBalanceSats),
        ),
      ) as BigInt);

  @override
  BigInt get spendableOnchainBalanceSats => (super.noSuchMethod(
        Invocation.getter(#spendableOnchainBalanceSats),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#spendableOnchainBalanceSats),
        ),
      ) as BigInt);

  @override
  BigInt get totalLightningBalanceSats => (super.noSuchMethod(
        Invocation.getter(#totalLightningBalanceSats),
        returnValue: _i8.dummyValue<BigInt>(
          this,
          Invocation.getter(#totalLightningBalanceSats),
        ),
      ) as BigInt);

  @override
  List<_i3.LightningBalance> get lightningBalances => (super.noSuchMethod(
        Invocation.getter(#lightningBalances),
        returnValue: <_i3.LightningBalance>[],
      ) as List<_i3.LightningBalance>);

  @override
  List<_i3.PendingSweepBalance> get pendingBalancesFromChannelClosures =>
      (super.noSuchMethod(
        Invocation.getter(#pendingBalancesFromChannelClosures),
        returnValue: <_i3.PendingSweepBalance>[],
      ) as List<_i3.PendingSweepBalance>);
}
